# prometheus-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: telemetry
  labels:
    app: prometheus
    component: server
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'otel-collector-app-metrics'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - telemetry
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: otel-collector
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: prom-metrics # Port 8889 w serwisie OTel Collector

      - job_name: 'otel-collector-internal-metrics'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - telemetry
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: otel-collector
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: coll-metrics # Port 8888 w serwisie OTel Collector

      - job_name: 'kube-state-metrics' # <--- NOWE ZADANIE DLA KUBE-STATE-METRICS
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: endpoints # Lub 'service' jeśli wolisz skrobać serwis bezpośrednio
            namespaces:
              names:
                # Zmień na przestrzeń nazw, w której wdrożyłeś kube-state-metrics
                # Może to być 'kube-system' lub 'telemetry'
                - telemetry
        relabel_configs:
          # Wybierz tylko serwis lub pody kube-state-metrics
          # Domyślna nazwa serwisu/podów to często 'kube-state-metrics'
          - source_labels: [__meta_kubernetes_service_name] # Jeśli role: service
            action: keep
            regex: kube-state-metrics
          # Lub dla podów:
          # - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
          #   action: keep
          #   regex: kube-state-metrics
          # Wybierz odpowiedni port (kube-state-metrics domyślnie udostępnia metryki na porcie 8080)
          - source_labels: [__meta_kubernetes_endpoint_port_name] # Jeśli role: endpoints
            action: keep
            # Nazwa portu w serwisie KSM, często 'http-metrics' lub 'metrics'
            regex: http-metrics # Sprawdź rzeczywistą nazwę portu w serwisie KSM
      - job_name: 'kubernetes-kubelet-cadvisor'
        # Kubelet udostępnia metryki cAdvisor na porcie 10250 (HTTPS)
        scrape_interval: 5s
        scheme: https
        # Konfiguracja TLS do połączenia z API Kubeleta
        tls_config:
          # Używamy CA Kubernetes do weryfikacji certyfikatu Kubeleta
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # Dla Minikube, jeśli są problemy z weryfikacją certyfikatu Kubeleta,
          # możesz potrzebować tymczasowo ustawić insecure_skip_verify: true.
          # W produkcji zawsze powinno być false.
          insecure_skip_verify: false # Zmień na true tylko jeśli testujesz na Minikube i masz błędy TLS
        # Używamy tokena ServiceAccount Prometheusa do autoryzacji
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        
        kubernetes_sd_configs:
          - role: node # Odkryj wszystkie węzły w klastrze
        
        relabel_configs:
          # Domyślne etykiety dla celów (możesz je dostosować)
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Ustaw adres celu na adres IP węzła i port Kubeleta
          - target_label: __address__
            replacement: kubernetes.default.svc # Adres API servera
          # Skonstruuj ścieżkę do metryk cAdvisor przez proxy API servera
          # To jest ta sama metoda, którą próbowaliśmy w OTel Collectorze,
          # ale tym razem robi to sam Prometheus.
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
